
import static com.mysql.jdbc.SQLError.createSQLException;
import com.mysql.jdbc.exceptions.*;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import static javax.swing.JOptionPane.showMessageDialog;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Oscar
 */
public class InterfazProductos extends javax.swing.JFrame {

    //Objetos
    conectar cc=new conectar();
    Connection cn=cc.conexion();
    
    //Variables globales
    int carEsp=0;
    String a="";  //variable de el nombre del producto en la tabla de vizualizar
    String b="";  //variable de la clasificacion del producto en la tabla de vizualizar
    String c="";  //variable de la fecha del producto en la tabla de vizualizar
    
    
    /**
     * Creates new form InterfazProductos
     */
    public InterfazProductos() {
        initComponents();
        inicio();
        mostrarTabla();
        setLocationRelativeTo(null);
        setTitle("InterfazProductos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescProd = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        txtStockM = new javax.swing.JTextField();
        lblStockM = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        lblTipoStock = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObsProd = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtNumFact = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnContinuar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        txtNomProd = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jToggleButton1 = new javax.swing.JToggleButton();
        btnInsertar = new javax.swing.JButton();
        lblFotoA = new javax.swing.JLabel();
        lblFotoB = new javax.swing.JLabel();
        lblFotoC = new javax.swing.JLabel();
        lblFotoD = new javax.swing.JLabel();
        txtRutaA = new javax.swing.JTextField();
        txtRutaB = new javax.swing.JTextField();
        txtRutaC = new javax.swing.JTextField();
        txtRutaD = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/banner.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));
        jPanel1.setToolTipText("");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel7FocusGained(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable3);

        txtBuscar.setToolTipText("Puede buscar en base a: Nombre, Fecha de Compra y Clasificaci√≥n del Producto");
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        jLabel5.setText("Buscar: ");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnBaja.setText("Baja Definitiva");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBaja)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnBaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Visualizar", jPanel7);

        jLabel2.setText("Nombre de Produto:");

        jLabel3.setText("Descripcion del Producto:");

        txtDescProd.setColumns(20);
        txtDescProd.setRows(5);
        txtDescProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescProdFocusLost(evt);
            }
        });
        txtDescProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescProdKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescProd);

        jLabel4.setText("Fecha de Compra: ");

        lblStock.setText("Stock : ");

        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });

        txtStockM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockMKeyTyped(evt);
            }
        });

        lblStockM.setText("Stock Minimo:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un tipo de Stock" }));

        lblTipoStock.setText("Tipo de Stock: ");

        txtObsProd.setColumns(20);
        txtObsProd.setRows(5);
        txtObsProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtObsProdFocusLost(evt);
            }
        });
        txtObsProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtObsProdKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtObsProd);

        jLabel7.setText("Observaciones Producto:");

        txtNumFact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumFactFocusLost(evt);
            }
        });
        txtNumFact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumFactKeyTyped(evt);
            }
        });

        jLabel8.setText("Numero de Factura:");

        btnContinuar.setText("Continuar");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });

        jLabel14.setText("Cantidad: ");

        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        txtNomProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomProdFocusLost(evt);
            }
        });
        txtNomProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomProdKeyTyped(evt);
            }
        });

        jLabel10.setText("Clasificacion:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una Clasificaci√≥n" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel12.setText("dd/mm/aa");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(77, 77, 77)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel14)
                                    .addComponent(lblStock)
                                    .addComponent(lblTipoStock)
                                    .addComponent(lblStockM))
                                .addGap(43, 43, 43))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStockM, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumFact, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(156, 156, 156))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStockM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStockM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnContinuar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Producto", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setText("Almacen:");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un Almac√©n" }));
        jPanel6.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 224, -1));

        jLabel11.setText("Estado:");
        jPanel6.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un Estado" }));
        jPanel6.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 224, -1));

        jToggleButton1.setText("Agregar Caracteristicas Especiales al Producto");
        jToggleButton1.setToolTipText("En caso de agregar (Vehiculos, Equipos de Computo, Mobiliario, etc.)");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 290, 50));

        btnInsertar.setText("Insertar");
        btnInsertar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnInsertarFocusGained(evt);
            }
        });
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        jPanel6.add(btnInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 290, -1));

        lblFotoA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_imagen.jpg"))); // NOI18N
        lblFotoA.setToolTipText("De click para a√±adir una imagen");
        lblFotoA.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        lblFotoA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoAMouseClicked(evt);
            }
        });
        jPanel6.add(lblFotoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 170));

        lblFotoB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_imagen.jpg"))); // NOI18N
        lblFotoB.setToolTipText("De click para a√±adir una imagen");
        lblFotoB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        lblFotoB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoBMouseClicked(evt);
            }
        });
        jPanel6.add(lblFotoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 150, 170));

        lblFotoC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_imagen.jpg"))); // NOI18N
        lblFotoC.setToolTipText("De click para a√±adir una imagen");
        lblFotoC.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        lblFotoC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoCMouseClicked(evt);
            }
        });
        jPanel6.add(lblFotoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 150, 170));

        lblFotoD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_imagen.jpg"))); // NOI18N
        lblFotoD.setToolTipText("De click para a√±adir una imagen");
        lblFotoD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        lblFotoD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoDMouseClicked(evt);
            }
        });
        jPanel6.add(lblFotoD, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 150, 170));
        jPanel6.add(txtRutaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 80, 20));
        jPanel6.add(txtRutaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 80, -1));
        jPanel6.add(txtRutaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 80, -1));
        jPanel6.add(txtRutaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 80, -1));

        jTabbedPane2.addTab("Informaci√≥n Adicional", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Insertar", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jLabel6.setText("Usuario:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(0, 107, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Autoajustar imagenes a un label
    public void ajustarImagen(){
        /*ImageIcon fondo= new ImageIcon(getClass().getResource("/img/Fondo_blanco.png"));
        ImageIcon icono = new ImageIcon(fondo.getImage().getScaledInstance(jLabel14.getWidth(), jLabel14.getHeight(),Image.SCALE_DEFAULT));
        jLabel14.setIcon(icono); */
    }
    
    
    //Insertar en combos desde la base de datos  
    public void inicio(){
        //Almacen
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerAlmacen = statement.executeQuery("SELECT Nombre_Alm FROM almacen");
            while (obtenerAlmacen.next()) {
                jComboBox1.addItem(obtenerAlmacen.getString(1));
            }//FIN WHILE
        }catch (SQLException ex) {
            Logger.getLogger(InterfazProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Clasificacion
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerClasific = statement.executeQuery("SELECT Nom_Clas FROM clasificacion");
            while (obtenerClasific.next()) {
                jComboBox2.addItem(obtenerClasific.getString(1));
            }//FIN WHILE
        }catch (SQLException ex) {
            Logger.getLogger(InterfazProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Estado
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerEstado = statement.executeQuery("SELECT Nombre_Est FROM estado");
            while (obtenerEstado.next()) {
                jComboBox3.addItem(obtenerEstado.getString(1));
            }//FIN WHILE
        }catch (SQLException ex) {
            Logger.getLogger(InterfazProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Stock
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerStock = statement.executeQuery("SELECT Nombre_TipStock FROM tipo_stock");
            while (obtenerStock.next()) {
                jComboBox4.addItem(obtenerStock.getString(1));
            }//FIN WHILE
        }catch (SQLException ex) {
            Logger.getLogger(InterfazProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtRutaA.setVisible(false);
        txtRutaB.setVisible(false);
        txtRutaC.setVisible(false);
        txtRutaD.setVisible(false);
        txtStock.setVisible(false);
        txtStockM.setVisible(false);
        jComboBox4.setVisible(false);
        lblStockM.setVisible(false);
        lblStock.setVisible(false);
        lblTipoStock.setVisible(false);
        btnBaja.setEnabled(false);
    }
   
    
    //Metodos para retornar los ids segun el nombre 
    public int obtenerIdAlm(JComboBox cmbAlmacen/**/){
        int resultado=0;
        String valor= cmbAlmacen.getSelectedItem().toString();
   
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerIdAlmacen = statement.executeQuery("SELECT idAlmacen FROM almacen where Nombre_Alm='"+valor+"'");
            while (obtenerIdAlmacen.next()) {
                resultado=obtenerIdAlmacen.getInt(1);
            }//FIN WHILE
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
    }    
    
    public int obtenerIdClas(JComboBox cmbClasificacion/**/){
        int resultado=0;
        String valor= cmbClasificacion.getSelectedItem().toString();
    
        try {    
            Statement statement = cn.createStatement();
            ResultSet obtenerIdClas = statement.executeQuery("SELECT idClasificacion FROM clasificacion where Nom_Clas='"+valor+"'");
            while (obtenerIdClas.next()) {
                resultado=obtenerIdClas.getInt(1);
            }//FIN WHILE
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
    }

    public int obtenerIdEst(JComboBox cmbEstado/**/){
        int resultado=0;
        String valor= cmbEstado.getSelectedItem().toString(); 
        
        try {    
            Statement statement = cn.createStatement();
            ResultSet obtenerIdEst = statement.executeQuery("SELECT idEstado FROM estado where Nombre_Est='"+valor+"'");
            while (obtenerIdEst.next()) {
                resultado=obtenerIdEst.getInt(1);
            }//FIN WHILE
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
    }

    public int obtenerIdTipStock(JComboBox cmbTipStock/**/){
        int resultado=0;
        String valor= cmbTipStock.getSelectedItem().toString();
    
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerIdAlmacen = statement.executeQuery("SELECT idTipoStock FROM tipo_stock where Nombre_TipStock='"+valor+"'");
            while (obtenerIdAlmacen.next()) {
                resultado=obtenerIdAlmacen.getInt(1);
            }//FIN WHILE 
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
}
    
    public int obtenerIdCar(){
        int resultado=0;
        String folio=generarFolioProd(jComboBox2.getSelectedItem().toString());
        
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerIdCar = statement.executeQuery("SELECT car.idCar_Esp from car_esp as car inner JOIN datos_esp as da on (da.Car_Esp_idCar_Esp=car.idCar_Esp) inner JOIN contenido as co on (co.Datos_Esp_idDatos_Esp=da.idDatos_Esp) where co.FolioClas_Cont ='"+folio+"' GROUP by car.idCar_Esp");
            while (obtenerIdCar.next()) {
                resultado=obtenerIdCar.getInt(1);
            }//FIN WHILE
            if(resultado==0){
                resultado=1;
            }
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
    }
    
    public int obtenerIdClas2(String b){
        int resultado=0;
    
        try {    
            Statement statement = cn.createStatement();
            ResultSet obtenerIdClas = statement.executeQuery("SELECT idClasificacion FROM clasificacion where Nom_Clas='"+b+"'");
            while (obtenerIdClas.next()) {
                resultado=obtenerIdClas.getInt(1);
            }//FIN WHILE
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resultado;
    }
    
    public int obtenerIdFoto(){
        int resultado=0;
        String valor = generarFolioProd(jComboBox2.getSelectedItem().toString());
        try{
        Statement statement = cn.createStatement();
            ResultSet obtenerIdFoto = statement.executeQuery("select f.idFotos from fotos as f WHERE F.FolioClas_Fot='"+valor +"' ");
            while (obtenerIdFoto.next()) {
                resultado=obtenerIdFoto.getInt(1);
            }//FIN WHILE 
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        if(resultado == 0){
            resultado=1;    
        }
        
        return resultado;
        
    }

    public String generarFolioProd(String cadena){
        int num=0;
        String fol="";
        String valor= cadena;
        try {
            Statement statement = cn.createStatement();
            ResultSet obtenerClasific = statement.executeQuery("select COUNT(*) from productos as p inner join clasificacion as c on (p.Clasificacion_idClasificacion=c.idClasificacion ) where c.Nom_Clas LIKE '"+valor+"'  ");
            while (obtenerClasific.next()) {
                num=(obtenerClasific.getInt(1)+1);
            }//FIN WHILE
            
            Statement st = cn.createStatement();
            ResultSet rs = statement.executeQuery("select c.Folio_Clas from clasificacion as c  where c.Nom_Clas LIKE '"+valor+"'  ");
            while (rs.next()) {
                fol=rs.getString(1);
            }//FIN WHILE
            
        }catch (SQLException ex) {
            Logger.getLogger(InterfazProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return fol+num;
    }

    
    //Insertar en Productos 
    public void insertarProductos(JTextField Nom_Prod,JTextArea DesProd, String FechaComp,JTextField Stock,JTextField StockMin,JTextField NoFact,JTextArea ObsProd){
        
        String nombre= Nom_Prod.getText();
        String descripcion = DesProd.getText();
        String stock="1";
        String stockMin="1";
        String numFact = NoFact.getText();
        String obs = ObsProd.getText();
        int idCarEsp = obtenerIdCar();
        int idAlmacen = obtenerIdAlm(jComboBox1);
        int idClass = obtenerIdClas(jComboBox2);
        int idEst = obtenerIdEst(jComboBox3);
        int idTipStock=2; 
        int idFoto = obtenerIdFoto();
        String folioClas_prod = generarFolioProd(jComboBox2.getSelectedItem().toString()); 
        if(jComboBox2.getSelectedItem().toString().equals("Consumibles") || jComboBox2.getSelectedItem().toString().equals("Papeler√≠a") ){
            idTipStock = obtenerIdTipStock(jComboBox4);
            stock = Stock.getText();
            stockMin = StockMin.getText();
        }
        if(txtRutaA.getText().isEmpty() && txtRutaB.getText().isEmpty() && txtRutaC.getText().isEmpty() && txtRutaD.getText().isEmpty()  ){
                idFoto=1;
        }
        
        try {    
            Statement statement = cn.createStatement();
            statement.executeUpdate("INSERT INTO productos(Clasificacion_idClasificacion,Estado_idEstado,Fotos_idFotos,Asignacion_Usr_idAsignacion,Almacen_idAlmacen,Nom_Prod,Des_Prod,FechaComp_Prod,Stoc_Prod,StockMin_Prod,Obs_Prod,NoFact_Prod,Car_Esp_idCar_Esp,TipoStock_idTipoStock,FolioClas_Prod) VALUES ("+idClass+","+idEst+","+idFoto+",4,"+idAlmacen+",'"+nombre+"','"+descripcion+"','"+FechaComp+"',"+stock+","+stockMin+",'"+obs+"','"+numFact+"',"+idCarEsp+","+idTipStock+" , '"+folioClas_prod+"')");            
    
        }catch (SQLException ex) {
            ex.printStackTrace();
        }        
    }
    
    
    //Insertar Fotos 
    public void insertarFoto(){
        FileInputStream archivofotoA;
        FileInputStream archivofotoB;
        FileInputStream archivofotoC;
        FileInputStream archivofotoD;
        String folioProd_Fot = generarFolioProd(jComboBox2.getSelectedItem().toString());
        try {
            archivofotoA = new FileInputStream(textoVacio(txtRutaA));
            archivofotoB = new FileInputStream(textoVacio(txtRutaB));
            archivofotoC = new FileInputStream(textoVacio(txtRutaC));
            archivofotoD = new FileInputStream(textoVacio(txtRutaD));
            
            Statement statement = cn.createStatement();
            statement.executeUpdate("INSERT INTO fotos(FotoA_Fot,FotoB_Fot,FotoC_Fot,FotoD_Fot,FolioClas_Fot) VALUES ('"+archivofotoA+"','"+archivofotoB+"','"+archivofotoC+"','"+archivofotoD+"','"+folioProd_Fot+"')");
        }catch (SQLException ex) {
            ex.printStackTrace();
        }catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } 

    }
    
    //Condiciones de vacio
    public boolean camposVacios(){
        if(jComboBox2.getSelectedItem().toString().equals("Consumibles") || jComboBox2.getSelectedItem().toString().equals("Papeler√≠a") ){
            if(txtNomProd.getText().equals("") || txtDescProd.getText().equals("") ||  txtStock.getText().equals("") || txtStockM.getText().equals("") || txtNumFact.getText().equals("")|| txtObsProd.getText().equals("") || txtCantidad.getText().equals("") || jComboBox4.getSelectedIndex()==0){
                return true;
            }
        }
        else if(jComboBox2.getSelectedItem().toString()!="Consumibles" || jComboBox2.getSelectedItem().toString()!="Papeler√≠a" ){
            if(txtNomProd.getText().equals("") || txtDescProd.getText().equals("") ||  txtNumFact.getText().equals("")|| txtObsProd.getText().equals("")){
                return true;
            }
        }    
        if(jComboBox1.getSelectedIndex()==0 || jComboBox2.getSelectedIndex()==0 || jComboBox3.getSelectedIndex()==0 ){
            return true;
        }
        return false;
    }
    
    public boolean camposVaciosContinuar(){
        if(jComboBox2.getSelectedItem().toString().equals("Consumibles") || jComboBox2.getSelectedItem().toString().equals("Papeler√≠a") ){
            if(txtNomProd.getText().equals("") || txtDescProd.getText().equals("") ||  txtStock.getText().equals("") || txtStockM.getText().equals("") || txtNumFact.getText().equals("")|| txtObsProd.getText().equals("") || txtCantidad.getText().equals("") || jComboBox4.getSelectedIndex()==0){
                return true;
            }
        }
        else if(jComboBox2.getSelectedItem().toString()!="Consumibles" || jComboBox2.getSelectedItem().toString()!="Papeler√≠a" ){
            if(txtNomProd.getText().equals("") || txtDescProd.getText().equals("") ||  txtNumFact.getText().equals("")|| txtObsProd.getText().equals("")){
                return true;
            }
        }    
        if( jComboBox2.getSelectedIndex()==0 ){
            return true;
        }
        return false;
    }
    
    public String textoVacio(JTextField text1){
        String valor=text1.getText();
        if(text1.getText().equals("")){
            if(!txtRutaA.getText().isEmpty() ){
                valor= txtRutaA.getText();
            }
            else if(!txtRutaB.getText().isEmpty() ){
                valor= txtRutaB.getText();
            }
            else if(!txtRutaC.getText().isEmpty()){
                valor= txtRutaC.getText();
            }
            else{
                valor= txtRutaD.getText();
            }
        }
        return valor;
    }
    
    
    //Tablas
    public void mostrarTabla(){
        DefaultTableModel modelo= new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Clasificacion");
        modelo.addColumn("Fecha Compra");
            
        jTable3.setModel(modelo);
        String datos[] = new String [3];
        
        try {
            Statement statement = cn.createStatement();
            ResultSet rs = statement.executeQuery("SELECT p.Nom_Prod,c.Nom_Clas,p.FechaComp_Prod FROM productos as p inner join clasificacion as c on (c.idClasificacion=p.Clasificacion_idClasificacion) INNER join estado as e on (e.idEstado=p.Estado_idEstado) where e.Nombre_Est not like 'Baja Definitivo' ");
            while (rs.next()) {
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                modelo.addRow(datos);
            }//FIN WHILE
            jTable3.setModel(modelo);
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }
    
    public void mostrarTablaBuscar(String valor){
        DefaultTableModel modelo= new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Clasificacion");
        modelo.addColumn("Fecha Compra");
            
        jTable3.setModel(modelo);
        String datos[] = new String [3];
        
        try {
            Statement statement = cn.createStatement();
            ResultSet rs = statement.executeQuery("SELECT p.Nom_Prod,c.Nom_Clas,p.FechaComp_Prod FROM productos as p inner join clasificacion as c on (c.idClasificacion=p.Clasificacion_idClasificacion) INNER join estado as e on (e.idEstado=p.Estado_idEstado) where (p.Nom_Prod LIKE '"+valor+"%' or c.Nom_Clas like '"+valor+"%' or p.FechaComp_Prod like '"+valor+"%') and e.Nombre_Est not like 'Baja Definitivo'");
            while (rs.next()) {
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                modelo.addRow(datos);
            }//FIN WHILE
            jTable3.setModel(modelo);
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    //"Dar de baja" (solo se cambia el estado)
    public void actualizarEstado(String a,String b, String c){
        int idClass= obtenerIdClas2(b);
        try {
            Statement statement = cn.createStatement();
            statement.executeUpdate("update productos as p set p.Estado_idEstado=2 WHERE p.Nom_Prod='"+a+"' and p.Clasificacion_idClasificacion="+idClass+" and p.FechaComp_Prod='"+c+"'");
            
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        InterfazCarEsp car=new InterfazCarEsp();
        car.setVisible(true);
        car.tipoClas=jComboBox2.getSelectedItem().toString();
        carEsp=car.obtenerIdCar();
        car.usuario(lblUsuario);
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        if(camposVacios()){       
            showMessageDialog(null,"Faltan Datos, Revise todos los campos");
            
        }else{
            if(!txtRutaA.getText().isEmpty() || !txtRutaB.getText().isEmpty() || !txtRutaC.getText().isEmpty() || !txtRutaD.getText().isEmpty()  ){
                insertarFoto();
            }
            try{
                String fecha = new SimpleDateFormat("yyyy-MM-dd").format(jXDatePicker1.getDate());
                if(  Integer.parseInt(txtCantidad.getText())>1){
                    for(int i=0;i<Integer.parseInt(txtCantidad.getText());i++)  {
                        insertarProductos(txtNomProd,txtDescProd,fecha,txtStock,txtStockM,txtNumFact,txtObsProd);
                    }
                }else{
                    insertarProductos(txtNomProd,txtDescProd,fecha,txtStock,txtStockM,txtNumFact,txtObsProd);
                } 
            }catch(NullPointerException e){
                showMessageDialog(null,"Ocurrio un error al insertar, revise que los campos sean correctos");
            }
            showMessageDialog(null,"Se inserto con exito");
            txtCantidad.setText("");
            txtNomProd.setText("");
            txtDescProd.setText("");
            txtStock.setText("");
            txtStockM.setText("");
            txtNumFact.setText("");
            txtObsProd.setText("");
            jComboBox1.setSelectedIndex(0);
            jComboBox2.setSelectedIndex(0);
            jComboBox3.setSelectedIndex(0);
            jComboBox4.setSelectedIndex(0);
        
            Icon imagen = new ImageIcon(getClass().getResource("/img/icono_imagen.jpg"));
            lblFotoA.setIcon(imagen);
            lblFotoB.setIcon(imagen);
            lblFotoC.setIcon(imagen);
            lblFotoD.setIcon(imagen);
            mostrarTabla();
        }
        
            
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
      
        if (camposVaciosContinuar()){
            showMessageDialog(null,"Faltan Datos, Revise todos los campos");
        }else{
            jTabbedPane2.setSelectedIndex(1);
        } 
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void lblFotoDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoDMouseClicked
        JFileChooser archivo = new JFileChooser();
        int ventana = archivo.showOpenDialog(null);
        if(ventana==JFileChooser.APPROVE_OPTION){
            File file= archivo.getSelectedFile();
            txtRutaD.setText(String.valueOf(file));
            Image foto = getToolkit().getImage(txtRutaD.getText());
            ImageIcon icono = new ImageIcon(new ImageIcon(foto).getImage().getScaledInstance(lblFotoD.getWidth(), lblFotoD.getHeight(),Image.SCALE_DEFAULT));
            lblFotoD.setIcon(icono);  
        }
        
    }//GEN-LAST:event_lblFotoDMouseClicked

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if(jComboBox2.getSelectedItem().toString().equals("Consumibles") || jComboBox2.getSelectedItem().toString().equals("Papeler√≠a") ){
            txtStock.setVisible(true);
            txtStockM.setVisible(true);
            jComboBox4.setVisible(true);
            lblStockM.setVisible(true);
            lblStock.setVisible(true);
            lblTipoStock.setVisible(true);
            txtCantidad.setVisible(false);
            txtCantidad.setText("1");
            jLabel14.setVisible(false);
        }
        else if(jComboBox2.getSelectedItem().toString()!="Consumibles" || jComboBox2.getSelectedItem().toString()!="Papeler√≠a" ){
            txtStock.setVisible(false);
            txtStockM.setVisible(false);
            jComboBox4.setVisible(false);
            lblStockM.setVisible(false);
            lblStock.setVisible(false);
            lblTipoStock.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void txtNomProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomProdKeyTyped
        char c = evt.getKeyChar();
        if((c<'a' || c >'z') && (c<'A' || c >'Z') && c!=evt.VK_SPACE ) evt.consume();
        txtNomProd.setText(txtNomProd.getText().toUpperCase());
        if(txtNomProd.getText().length()==45){
            evt.consume(); }
    }//GEN-LAST:event_txtNomProdKeyTyped

    private void lblFotoAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAMouseClicked
        JFileChooser archivo = new JFileChooser();
        int ventana = archivo.showOpenDialog(null);
        if(ventana==JFileChooser.APPROVE_OPTION){
            File file= archivo.getSelectedFile();
            txtRutaA.setText(String.valueOf(file));
            Image foto = getToolkit().getImage(txtRutaA.getText());
            ImageIcon icono = new ImageIcon(new ImageIcon(foto).getImage().getScaledInstance(lblFotoA.getWidth(), lblFotoA.getHeight(),Image.SCALE_DEFAULT));
            lblFotoA.setIcon(icono);
        }
    }//GEN-LAST:event_lblFotoAMouseClicked

    private void lblFotoBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoBMouseClicked
        JFileChooser archivo = new JFileChooser();
        int ventana = archivo.showOpenDialog(null);
        if(ventana==JFileChooser.APPROVE_OPTION){
            File file= archivo.getSelectedFile();
            txtRutaB.setText(String.valueOf(file));
            Image foto = getToolkit().getImage(txtRutaB.getText());
            ImageIcon icono = new ImageIcon(new ImageIcon(foto).getImage().getScaledInstance(lblFotoB.getWidth(), lblFotoB.getHeight(),Image.SCALE_DEFAULT));
            lblFotoB.setIcon(icono);  
        }
    }//GEN-LAST:event_lblFotoBMouseClicked

    private void lblFotoCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoCMouseClicked
        JFileChooser archivo = new JFileChooser();
        int ventana = archivo.showOpenDialog(null);
        if(ventana==JFileChooser.APPROVE_OPTION){
            File file= archivo.getSelectedFile();
            txtRutaC.setText(String.valueOf(file));
            Image foto = getToolkit().getImage(txtRutaC.getText());
            ImageIcon icono = new ImageIcon(new ImageIcon(foto).getImage().getScaledInstance(lblFotoC.getWidth(), lblFotoC.getHeight(),Image.SCALE_DEFAULT));
            lblFotoC.setIcon(icono);
        }
    }//GEN-LAST:event_lblFotoCMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(txtBuscar.getText().equals("")){
            mostrarTabla();
        }
        else{
            mostrarTablaBuscar(txtBuscar.getText());
        }   
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        mostrarTablaBuscar(txtBuscar.getText());
        txtBuscar.setText(txtBuscar.getText().toUpperCase());
        if(txtBuscar.getText().length()==45){
            evt.consume(); }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        Point point = evt.getPoint();
        int row = jTable3.rowAtPoint(point);
        TableModel model = jTable3.getModel();
        a =model.getValueAt(row,0).toString();
        b = model.getValueAt(row,1).toString();
        c = model.getValueAt(row,2).toString();
        btnBaja.setEnabled(true);
    }//GEN-LAST:event_jTable3MouseClicked

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        actualizarEstado(a,b,c);
        mostrarTabla();
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnInsertarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnInsertarFocusGained
        
    }//GEN-LAST:event_btnInsertarFocusGained

    private void jPanel7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel7FocusGained
       
    }//GEN-LAST:event_jPanel7FocusGained

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char c = evt.getKeyChar();
        if(c<'0' || c >'9') evt.consume();
        if(txtCantidad.getText().length()==3){
            evt.consume(); 
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtDescProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescProdKeyTyped
        txtDescProd.setText(txtDescProd.getText().toUpperCase());
        if(txtDescProd.getText().length()==255){
            evt.consume(); }
    }//GEN-LAST:event_txtDescProdKeyTyped

    private void txtObsProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObsProdKeyTyped
        txtObsProd.setText(txtObsProd.getText().toUpperCase());
        if(txtObsProd.getText().length()==255){
            evt.consume(); }
    }//GEN-LAST:event_txtObsProdKeyTyped

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
        char c = evt.getKeyChar();
        if(c<'0' || c >'9') evt.consume();
        if(txtStock.getText().length()==4){
            evt.consume(); }
    }//GEN-LAST:event_txtStockKeyTyped

    private void txtStockMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockMKeyTyped
        char c = evt.getKeyChar();
        if(c<'0' || c >'9') evt.consume();
        if(txtStockM.getText().length()==4){
            evt.consume(); }
    }//GEN-LAST:event_txtStockMKeyTyped

    private void txtNomProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomProdFocusLost
        txtNomProd.setText(txtNomProd.getText().toUpperCase());
    }//GEN-LAST:event_txtNomProdFocusLost

    private void txtDescProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescProdFocusLost
        txtDescProd.setText(txtDescProd.getText().toUpperCase());
    }//GEN-LAST:event_txtDescProdFocusLost

    private void txtObsProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObsProdFocusLost
        txtObsProd.setText(txtObsProd.getText().toUpperCase());
    }//GEN-LAST:event_txtObsProdFocusLost

    private void txtNumFactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumFactKeyTyped
        txtNumFact.setText(txtNumFact.getText().toUpperCase());
        if(txtNumFact.getText().length()==45){
            evt.consume(); }
    }//GEN-LAST:event_txtNumFactKeyTyped

    private void txtNumFactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumFactFocusLost
        txtNumFact.setText(txtNumFact.getText().toUpperCase());
    }//GEN-LAST:event_txtNumFactFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable3;
    private javax.swing.JToggleButton jToggleButton1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lblFotoA;
    private javax.swing.JLabel lblFotoB;
    private javax.swing.JLabel lblFotoC;
    private javax.swing.JLabel lblFotoD;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblStockM;
    private javax.swing.JLabel lblTipoStock;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextArea txtDescProd;
    private javax.swing.JTextField txtNomProd;
    private javax.swing.JTextField txtNumFact;
    private javax.swing.JTextArea txtObsProd;
    private javax.swing.JTextField txtRutaA;
    private javax.swing.JTextField txtRutaB;
    private javax.swing.JTextField txtRutaC;
    private javax.swing.JTextField txtRutaD;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtStockM;
    // End of variables declaration//GEN-END:variables


    public void agregar(){
        jTabbedPane1.setEnabledAt(1, true);
    }

    public void vizualizar(){
        jTabbedPane1.setEnabledAt(0, true);
    }

    public void modificar(){

    }
    
    public void eliminar(){
        btnBaja.setVisible(true);
    }

    public void agregar2(){
        jTabbedPane1.setEnabledAt(1, false);
    }

    public void vizualizar2(){
        jTabbedPane1.setEnabledAt(0, false);
        jTable3.setVisible(false);
    }

    public void modificar2(){

    }

    public void eliminar2(){
        btnBaja.setVisible(false);
    }
    
    public void usuario(JLabel a){
        lblUsuario.setText(a.getText());
    }
  
    
}
